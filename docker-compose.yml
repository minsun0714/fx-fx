services:
  app:
    image: minsun/fx-fx:latest
    container_name: app
    ports:
      - "8080:8080"
    networks:
      - elk-net
  # ========================
  # Zookeeper
  # ========================
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME}
    ports:
      - "${ZOOKEEPER_EXTERNAL_PORT}:${ZOOKEEPER_CLIENT_PORT}"
    networks:
      - elk-net

  # ========================
  # Kafka Broker (1대)
  # ========================
  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "${KAFKA_EXTERNAL_PORT}:9092"
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_LISTENERS: ${KAFKA_LISTENERS}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - elk-net

  # ========================
  # Elasticsearch (단일 노드)
  # ========================
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: elasticsearch
    environment:
      - node.name=${ES_NODE_NAME}
      - cluster.name=${ES_CLUSTER_NAME}
      - discovery.type=${ES_DISCOVERY_TYPE}
      - xpack.security.enabled=${ES_XPACK_SECURITY}
      - bootstrap.memory_lock=${ES_BOOTSTRAP_MEMORY_LOCK}
      - ES_JAVA_OPTS=${ES_JAVA_OPTS}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - "${ES_EXTERNAL_PORT}:9200"
    networks:
      - elk-net

  # ========================
  # Kibana
  # ========================
  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.0
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=${KIBANA_ES_HOST}
    ports:
      - "${KIBANA_EXTERNAL_PORT}:5601"
    networks:
      - elk-net

  # ========================
  # InfluxDB
  # ========================
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "${INFLUXDB_EXTERNAL_PORT}:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${FX_INFLUX_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${FX_INFLUX_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${FX_INFLUX_TOKEN}
    volumes:
      - influxdb-data:/var/lib/influxdb2
    networks:
      - elk-net


  # ========================
  # Grafana
  # ========================
  grafana:
    image: grafana/grafana:10.4.2
    container_name: grafana
    ports:
      - "${GRAFANA_EXTERNAL_PORT}:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - elk-net

networks:
  elk-net:
    driver: bridge

volumes:
  kafka-data:
  es-data:
  influxdb-data:
  grafana-data:
